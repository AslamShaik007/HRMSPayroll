# Generated by Django 4.0.3 on 2023-06-22 09:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('directory', '0001_initial'),
        ('HRMSApp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppraisalSetName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(help_text='Enter Set Names For Add Quationnaires', max_length=100, verbose_name='Employee Appraisal Set Name')),
                ('set_number', models.IntegerField(blank=True, help_text='Set Number Will Be Increases by Default', null=True, verbose_name='Set Number')),
                ('is_active', models.BooleanField(default=True, help_text='Status Will Be Taken As Active Or Inactive, But Default It Will Be Active', verbose_name='Status')),
                ('author', models.ForeignKey(help_text='Enter Primary Key Of Employee Model', on_delete=django.db.models.deletion.CASCADE, related_name='author_employee', to='directory.employee', verbose_name='Author')),
                ('company', models.ForeignKey(help_text='Enter Primary Key of CompanyDetails Model', on_delete=django.db.models.deletion.CASCADE, related_name='company_setname', to='HRMSApp.companydetails', verbose_name='Company')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('notification_start_date', models.DateField()),
                ('notification_end_date', models.DateField()),
                ('reporting_manager_start_date', models.DateField()),
                ('reporting_manager_end_date', models.DateField()),
                ('employees_kra_deadline_date', models.DateField()),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppraisalSetQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, help_text='Status Will Be Taken As Active Or Inactive, But Default It Will Be Active', verbose_name='Status')),
                ('creation_date', models.DateTimeField(auto_now=True, help_text='Current DateTime Will Be Add by Default', verbose_name='Creation Date')),
                ('questions', models.CharField(help_text='Enter Multiple Questions In a Array[]', max_length=500, verbose_name='Questions')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('set_name', models.ForeignKey(help_text='Enter The Primary Key Of Set_Names Model', on_delete=django.db.models.deletion.CASCADE, related_name='setname_questions', to='performance_management.appraisalsetname', verbose_name='Set Names')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppraisalSendForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('creation_date', models.DateTimeField(auto_now=True, help_text='Date Will Be Add Default Current Date And Time', verbose_name='Creation Date')),
                ('candidate_status', models.CharField(default='NOT SUBMITTED', help_text="It Will Be a Not Submitted,Till He Didn't Submitte the KRA Form,After Submitteing KRA It Will Be Change To Submitted", max_length=100, verbose_name='Candidate Status')),
                ('Emp_suggestion', models.CharField(blank=True, help_text='Employee Will Add There Suggestions Here If Any', max_length=500, null=True, verbose_name='Employee Suggestion')),
                ('manager_acknowledgement', models.CharField(default='PENDING', help_text='Till Manager Give Score To An Employee Its Pending,After Giving Score Its Will Be Submitted', max_length=500, verbose_name='Manager Acknowledgement')),
                ('score', models.FloatField(default=0, help_text='Enter Score For An Employee', verbose_name='Score')),
                ('monthly_score_status', models.CharField(default='PENDING', help_text='If Score Is Add To An Employee It Will Be Change To On-Track,Default It Will Be Pending', max_length=100, verbose_name='Monthly Score Status')),
                ('email_status', models.CharField(blank=True, help_text='Enter Sent, If Email As Send To His Official Email', max_length=100, null=True, verbose_name='Email Status')),
                ('revoke', models.CharField(blank=True, help_text='If Employee Forgot To Submitte KRA,By This Revoke We Can Send A KRA Form Email To His Official Email', max_length=100, null=True, verbose_name='Revoke')),
                ('comment', models.CharField(help_text='Comment Will Be Add To An Employee By Manager', max_length=500, verbose_name='Comment')),
                ('reason', models.CharField(blank=True, help_text='Reason Will be Add To An Employee According To Given Score', max_length=500, null=True, verbose_name='Reason')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('employee', models.ForeignKey(help_text='Enter Primary Key Of Employee Model', on_delete=django.db.models.deletion.CASCADE, related_name='sendform_employee', to='directory.employee', verbose_name='Employee')),
                ('set_id', models.ForeignKey(help_text='Enter Primary Key Of Appraisal Set Name Model', on_delete=django.db.models.deletion.CASCADE, related_name='setnumber_id', to='performance_management.appraisalsetname', verbose_name='Set Number')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppraisalFormSubmit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('answer', models.CharField(blank=True, help_text='Enter The Answer For The Given Question', max_length=800, null=True, verbose_name='Answer')),
                ('sentform_date', models.DateTimeField(auto_now=True, help_text='It Will Take Current Date And Time By Default', verbose_name='Sent Form Date')),
                ('candidate_status', models.CharField(help_text='Employee Can Be Enter Like Save Or Submit', max_length=100, verbose_name='Candidate Status')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('employee', models.ForeignKey(help_text='Enter a Primary Key Of the Employee Model', on_delete=django.db.models.deletion.CASCADE, related_name='employee_appraisalform', to='directory.employee', verbose_name='Employee')),
                ('question', models.ForeignKey(help_text='Enter a Primary Key Of Appraisalsetquestions Model', on_delete=django.db.models.deletion.CASCADE, related_name='question_appraisal', to='performance_management.appraisalsetquestions', verbose_name='Question_id')),
                ('set_name', models.ForeignKey(help_text='Enter a Primary Key Of AppraisalSetName Model', on_delete=django.db.models.deletion.CASCADE, related_name='setname_appraisal', to='performance_management.appraisalsetname', verbose_name='Set Name')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
