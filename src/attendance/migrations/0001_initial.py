# Generated by Django 4.0.3 on 2023-06-22 09:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('directory', '0001_initial'),
        ('HRMSApp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(help_text='Enter Rule Name', max_length=100, verbose_name='Rule Name')),
                ('description', models.CharField(default='This is Default description for the attendance. You can customise this.', help_text='Enter Description', max_length=100, verbose_name='Description')),
                ('shift_in_time', models.TimeField(help_text='Enter Shift In Time, For Assign To An Employee', null=True, verbose_name='Shift In Time')),
                ('shift_out_time', models.TimeField(help_text='Enter Shift Out Time, For Assign To An Employee', null=True, verbose_name='Shift Out Time')),
                ('auto_deduction', models.BooleanField(default=False, help_text='Enable Auto Deduction', verbose_name='Auto Deduction')),
                ('enable_anomaly_tracing', models.BooleanField(default=False, help_text='A flat to track anamolies based upon the settings', verbose_name='Anomaly Trace Enabled?')),
                ('grace_in_time', models.CharField(help_text='Enter Grace In Time in hours and minutes (%H:%M)', max_length=20, null=True, verbose_name='Grace In Time')),
                ('grace_out_time', models.CharField(help_text='Enter Grace Out Time in hours and minutes (%H:%M)', max_length=20, null=True, verbose_name='Grace Out Time')),
                ('full_day_work_duration', models.CharField(help_text='Enter Full day working time in hours and minutes (%H:%M)', max_length=20, null=True, verbose_name='Full Day Work Duration')),
                ('half_day_work_duration', models.CharField(help_text='Enter Half day working time in hours and minutes (%H:%M)', max_length=20, null=True, verbose_name='Half Day Work Duration')),
                ('max_break_duration', models.CharField(help_text='Total Break Time taken by the employee', max_length=20, null=True, verbose_name='Maximum Break Duration')),
                ('max_breaks', models.IntegerField(help_text='No Of Breaks Taken By the employee', null=True, verbose_name='Maximum No.Of Breaks')),
                ('auto_clock_out', models.BooleanField(default=False, help_text='If auto clock out is enabled, after completion of shift it clockout', verbose_name='Auto Clock Out')),
                ('is_default', models.BooleanField(default=False, help_text='Enable Company Default', verbose_name='Set As Company Default')),
                ('effective_date', models.DateField(help_text='Enter Effective Date', null=True, verbose_name='Effective Date')),
                ('enable_over_time', models.BooleanField(default=False, help_text='Allow employee to do over time', verbose_name='Enable Over Time')),
                ('enable_attendance_selfie', models.BooleanField(default=False, help_text='Allow employee to take selfie while check_in', verbose_name='Enable Attendance Selfie')),
                ('enable_geo_fencing', models.BooleanField(default=False, help_text='If Admin enable, show two fields under the section Location, Distance', verbose_name='Enable Geo Fencing')),
                ('location_address', models.CharField(help_text='employee need to checkin from the address', max_length=500, null=True, verbose_name='Adress for Geo Fencing')),
                ('distance', models.IntegerField(help_text='Distance in meters to employee checkin', null=True, verbose_name='Distance')),
                ('longitude', models.CharField(help_text='Office Longitude Location', max_length=50, null=True, verbose_name='Logitude')),
                ('latitude', models.CharField(help_text='Office Latitude Location', max_length=50, null=True, verbose_name='Latitude')),
                ('enable_comp_off', models.BooleanField(default=False, help_text='If Employee worked in weekends and holidays it will add count to compoff balance in leave rules', verbose_name='Enable Comp Off')),
                ('enable_penalty_rules', models.BooleanField(default=False, help_text='If Admin enable, so here some penalty rules will set in another table', verbose_name='Enable Penalty Rules')),
                ('enable_auto_deduction', models.BooleanField(default=False, verbose_name='Enable Auto Deduction')),
                ('company', models.ForeignKey(help_text='Enter Primary Key Of CompanyDetails Table', on_delete=django.db.models.deletion.CASCADE, to='HRMSApp.companydetails', verbose_name='Company')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Attendance Rule',
                'verbose_name_plural': 'Attendance Rules',
            },
        ),
        migrations.CreateModel(
            name='PenaltyRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('in_time', models.BooleanField(default=False, help_text='Enable Button For In Time True Or False', null=True, verbose_name='In Time')),
                ('late_coming_allowed', models.IntegerField(help_text='Enter a number of Leave Count Allowed', null=True, verbose_name='Leave Count Allowed')),
                ('in_penalty_interval', models.IntegerField(help_text='Enter a number of In Penalty Interval', null=True, verbose_name='In penalty Interval')),
                ('in_penalty', models.CharField(help_text='Enter Penalty', max_length=100, null=True, verbose_name='In Penalty')),
                ('in_leave_deduction', models.CharField(help_text='Enter In Leave Duduction', max_length=100, null=True, verbose_name='In Leave Deduction')),
                ('out_time', models.BooleanField(default=False, help_text='Enable True Or False For Out Time', null=True, verbose_name='Out Time')),
                ('early_leaving_allowed', models.IntegerField(help_text='Enter a Number For Early Leaving Allowed', null=True, verbose_name='Early Leaving Allowed')),
                ('out_penalty_interval', models.IntegerField(help_text='Enter a Number For Out Penalty Interval', null=True, verbose_name='Out Penalty Interval')),
                ('out_penalty', models.CharField(help_text='Enter Out Penalty', max_length=100, null=True, verbose_name='Out Penalty')),
                ('out_leave_deduction', models.CharField(help_text='Enter Out Leave Deduction', max_length=100, null=True, verbose_name='Out Leave Deduction')),
                ('work_duration', models.BooleanField(default=False, help_text='Enable True Or False For Work Duration', null=True, verbose_name='Work Duration')),
                ('shortfall_in_wd_allowed', models.IntegerField(blank=True, help_text='Enter a Number For ShortFall In WD Allowed', null=True, verbose_name='ShortFall In WD Allowed')),
                ('work_penalty_interval', models.IntegerField(blank=True, help_text='Enter a Number For Work Penalty Interval', null=True, verbose_name='Work Penalty Interval')),
                ('work_penalty', models.CharField(blank=True, help_text='Enter a Word Penalty', max_length=100, null=True, verbose_name='Word Penalty')),
                ('work_leave_deduction', models.CharField(help_text='Enter Work Leave Deduction', max_length=100, null=True, verbose_name='Work Leave Deduction')),
                ('outstanding_breaks_penalty', models.BooleanField(default=False, help_text='Enable True Or False For Outstanding Breaks Penalty ', null=True, verbose_name='Outstanding Breaks Penalty ')),
                ('excess_breaks_allowed', models.IntegerField(help_text='Enter a Number For Work Penalty Interval', null=True, verbose_name='On Of Breaks Allowed')),
                ('break_penalty_interval', models.IntegerField(help_text='Enter a Number For Work Penalty Interval', null=True, verbose_name='Breaks Penalty Interval')),
                ('break_penalty', models.CharField(help_text='Enter the Break Penalty', max_length=100, null=True, verbose_name='Breaks Penalty')),
                ('break_leave_deduction', models.CharField(help_text='Enter Break Leave Deduction', max_length=100, null=True, verbose_name='Breaks Leave Deduction')),
                ('attendance_rule', models.ForeignKey(help_text='Enter Primary Key Of attendance_rule Table', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalty_rules', to='attendance.attendancerules', verbose_name='attendance_rule_id')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Penalty Rule',
                'verbose_name_plural': 'Penalty Rules',
            },
        ),
        migrations.CreateModel(
            name='EmployeeCheckInOutDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('status', models.CharField(default='A', help_text='Its Shows, If Employee Check In Status Will Active', max_length=20, verbose_name='Status')),
                ('date_of_checked_in', models.DateField(blank=True, help_text='Employee Check In Date', null=True, verbose_name='Date Of Checked In')),
                ('time_in', models.DateTimeField(help_text='Employee Clock In Time', null=True, verbose_name='Clock In Time')),
                ('latest_time_in', models.DateTimeField(help_text='Employee Latest Clock In Time', null=True, verbose_name='Latest Clock In Time')),
                ('time_out', models.DateTimeField(blank=True, help_text='Employee Clock Out Time', null=True, verbose_name='Clock Out Time')),
                ('work_duration', models.CharField(blank=True, help_text='Working time in hours and minutes', max_length=20, null=True, verbose_name='Work Duration')),
                ('break_duration', models.CharField(blank=True, help_text='Break time in hours and minutes format', max_length=20, null=True, verbose_name='Break Duration')),
                ('breaks', models.IntegerField(blank=True, help_text='It will Count,How Many Breaks You Have Taken in your Duty Period', null=True, verbose_name='Breaks')),
                ('employee_selfie', models.FileField(blank=True, help_text='Employee Selfie to identify', null=True, upload_to='emplyee_attendance_selfie/', verbose_name='Employee Selfie')),
                ('employee_selfie_binary', models.TextField(blank=True, help_text='Employee Selfie to identify', null=True, verbose_name='Employee Selfie Binary')),
                ('location', models.CharField(blank=True, help_text='Employee Geo Location while clock in', max_length=500, null=True, verbose_name='Employee Geo Location')),
                ('distance', models.IntegerField(blank=True, default=0, help_text='Employee Geo Location Distance', null=True, verbose_name='Distance')),
                ('action_status', models.PositiveSmallIntegerField(choices=[(10, 'Approved'), (20, 'Pending'), (30, 'Cancelled'), (40, 'Rejected'), (50, 'Ok')], default=50, help_text='It indicates the approval status', verbose_name='Approval Status')),
                ('action', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Mark as Present'), (20, 'Mark as Exact Time'), (30, 'Mark as Leave'), (40, 'Mark as LOP')], help_text='action requested by the user', null=True, verbose_name='Action')),
                ('action_reason', models.CharField(blank=True, help_text='Reason for action apply', max_length=512, null=True, verbose_name='Reason')),
                ('approval_reason', models.CharField(blank=True, help_text='Reason for action approval', max_length=512, null=True, verbose_name='Approval Reason')),
                ('reject_reason', models.CharField(blank=True, help_text='Reason for action reject', max_length=512, null=True, verbose_name='Approval Reason')),
                ('extra_data', models.JSONField(blank=True, default=dict, help_text='to store the approval information', verbose_name='Extra Info')),
                ('overtime_hours', models.PositiveIntegerField(default=0, verbose_name='OT Working Hours')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('employee', models.ForeignKey(help_text='Enter Primary Key of Employee Table', on_delete=django.db.models.deletion.CASCADE, related_name='clock_details', to='directory.employee', verbose_name='Employee')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Employee Check In/Out Detail',
                'verbose_name_plural': 'Employee Check In/Out Details',
            },
        ),
        migrations.CreateModel(
            name='AttendanceRuleSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('attendance_input_cycle_from', models.IntegerField(default=21, help_text='Enter Attendance Input Cycle', null=True, verbose_name='Attendance Input Cycle')),
                ('attendance_input_cycle_to', models.IntegerField(default=20, help_text='Enter Attendance Input Cycle', null=True, verbose_name='Attendance Input Cycle')),
                ('limit_backdated_ar_application', models.IntegerField(help_text='Enter Limit Backdated AR Application', null=True, verbose_name='Limit Backdated AR Application')),
                ('limit_number_of_ar_application_per_month', models.IntegerField(help_text='Enter Limit Number Of AR Application Per Month', null=True, verbose_name='Limit Number Of AR Per Month Application')),
                ('daily_attendance_report_reminder', models.BooleanField(default=False, help_text='Enable Daily Attendance Report Reminder', verbose_name='Daily Attendance Report Reminder')),
                ('late_early_punch_reminder', models.BooleanField(default=False, help_text='Enable Late Early Punch Reminder', verbose_name='Late Early Punch Reminder')),
                ('pending_regularization_reminder', models.BooleanField(default=False, help_text='Enable Pending Regularization Reminder', verbose_name='Pending Regularization Reminder')),
                ('ip_restriction', models.BooleanField(default=False, help_text='Enable IP Restriction', verbose_name='IP Restriction')),
                ('company', models.ForeignKey(help_text='Enter Primary Key Of CompanyDetails Table', on_delete=django.db.models.deletion.CASCADE, to='HRMSApp.companydetails', verbose_name='Company Id')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Attendance Rules Setting',
                'verbose_name_plural': 'Attendance Rules Settings',
            },
        ),
        migrations.CreateModel(
            name='AnamolyHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('request_date', models.DateField(help_text='Employee Anomalie Date', verbose_name='Anomaly request date')),
                ('choice', models.PositiveSmallIntegerField(choices=[(10, 'In Time'), (20, 'Out Time'), (30, 'Full Day Work Duration'), (40, 'Half Day Work Duration'), (50, 'Break Duration'), (60, 'No Of Breaks')], help_text='Type of Anamoly', verbose_name='Type')),
                ('result', models.CharField(blank=True, help_text='Anamoly calculation result', max_length=20, null=True, verbose_name='result')),
                ('reason', models.CharField(blank=True, help_text='Employee reason for anomalie', max_length=100, verbose_name='reason for anomalie')),
                ('status', models.PositiveSmallIntegerField(choices=[(10, 'Approved'), (20, 'Pending'), (30, 'Cancelled'), (40, 'Rejected')], default=20, help_text='It indicates the approval status', verbose_name='Approval Status')),
                ('action', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Mark as Present'), (20, 'Mark as Exact Time'), (30, 'Mark as Leave'), (40, 'Mark as LOP')], help_text='action requested by the user', null=True, verbose_name='Action')),
                ('clock', models.ForeignKey(help_text='Relate to the employee clock in details', on_delete=django.db.models.deletion.CASCADE, related_name='anamolies', to='attendance.employeecheckinoutdetails', verbose_name='Employee Clock')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Anamoly History',
                'verbose_name_plural': 'Anamoly History',
                'ordering': ['request_date'],
            },
        ),
        migrations.CreateModel(
            name='AssignedAttendanceRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('effective_date', models.DateField(help_text='Enter Effective Date', verbose_name='Effective Date')),
                ('resend_reminder', models.BooleanField(default=False, help_text='Enable Resend Reminder', verbose_name='Resend Reminder')),
                ('attendance_rule', models.ForeignKey(help_text='Enter Attendance Rule Primary Key', on_delete=django.db.models.deletion.CASCADE, related_name='attendance_id', to='attendance.attendancerules', verbose_name='Attendance Rules')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('employee', models.ForeignKey(help_text='Employe PRimary Key Of Employee', on_delete=django.db.models.deletion.CASCADE, to='directory.employee', verbose_name='Employee Id')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Assign Attendance Rule',
                'verbose_name_plural': 'Assign Attendance Rules',
                'unique_together': {('employee', 'attendance_rule')},
            },
        ),
    ]
